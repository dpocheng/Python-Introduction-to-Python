# Pok On Cheng 74157306 and Zongheng Ma 16285673. ICS 31 Lab sec 5. Lab Asst 2.
print('Part (c)')
print('How many hours?')
hours = int(input())
print('This many hours:', hours)
print('How many dollars per hour?')
rate = int(input())
print('This many dollars per hour: ', rate)
print('Weekly salary: ', hours * rate)
print(' ')
hours = int(input('How many hours?'))
print('This many hours:', hours)
rate = int(input('How many dollars per hours?'))
print('This many dollars per hour: ', rate)
print('Weekly salary: ', hours * rate)
print(' ')
name = input('Hello. What is your name? ')
print('Hello, ', name)
print('It\'s nice to meet you.')
age = int(input('How old are you? '))
print('Next year you will be', age + 1, 'years old.')
print('Good-bye!')
print('\n')

print('Part (d)')
KRONE_PER_EURO = 7.46
KRONE_PER_POUND = 8.81
KRONE_PER_DOLLAR = 5.50
print('Please provide this information:')
businessName = input('Business name: ')
numberOfEuros = int(input('Number of euros: '))
numberOfPounds = int(input('Number of pounds: '))
numberOfDollars = int(input('Number of dollars: '))
print(' ')
print('Copenhagen Chamber of Commerce')
print('Business name:  ', businessName)
print(numberOfEuros, 'euros is', numberOfEuros * KRONE_PER_EURO, 'krone')
print(numberOfPounds, 'pounds is', numberOfPounds * KRONE_PER_POUND, 'krone')
print(numberOfDollars, 'dollars is', numberOfDollars * KRONE_PER_DOLLAR, 'krone')
print(' ')
print('Total krone:  ', numberOfEuros * KRONE_PER_EURO + numberOfPounds * KRONE_PER_POUND + numberOfDollars * KRONE_PER_DOLLAR)
print('\n')

print('Part (e)')
from collections import namedtuple
Book = namedtuple('Book', 'title author year price')
favorite = Book('Adventures of Sherlock Holmes', 'Arthur Conan Doyle', 1892, 21.50)
another = Book('Memoirs of Sherlock Holmes', 'Arthur Conan Doyle', 1894, 23.50)
still_another = Book('Return of Sherlock Holmes', 'Arthur Conan Doyle', 1905, 25.00)
print('still_another.title')
print(still_another.title)
print(' ')
print('another.price')
print(another.price)
print(' ')
print("float((favorite.price + another.price + still_another.price) / 3)")
print(float((favorite.price + another.price + still_another.price) / 3))
print(' ')
print('favorite.year < 1900')
print(favorite.year < 1900)
print(' ')
still_another_change1 = Book('Return of Sherlock Holmes', 'Arthur Conan Doyle', 1905, 25.00 + 1)
print("still_another_change1 = Book('Return of Sherlock Holmes', 'Arthur Conan Doyle', 1905, 25.00 + 1)")
print(still_another_change1.price)
print(' ')
still_another_change2 = Book('Return of Sherlock Holmes', 'Arthur Conan Doyle', 1905, 25.00*(1 + 0.2))
print("still_another_change2 = Book('Return of Sherlock Holmes', 'Arthur Conan Doyle', 1905, 25.00*(1 + 0.2))")
print(still_another_change2.price)
print('\n')

print('Part (f)')
from collections import namedtuple
Animal = namedtuple('Animal', 'name species age weight favoriteFood')
elephant = Animal('Jumbo', 'Large Mammals', 50, 1000, 'Peanuts')
platypus = Animal('Perry', 'Semiaquatic Mammal', 7, 1.7, 'Shrimp')
print('elephant.weight < platypus.weight')
print(elephant.weight < platypus.weight)
print('\n')

print('Part (g)')
booklist = [favorite, another, still_another]
print('booklist[0].price < booklist[1].price')
print(booklist[0].price < booklist[1].price)
print(' ')
print('booklist[0].year > booklist[2].year')
print(booklist[0].year > booklist[2].year)
print('\n')

print('Part (h)')
from collections import namedtuple
Restaurant = namedtuple('Restaurant', 'name cuisine phone dish price')
# Restaurant attributes: name, kind of food served, phone number, best dish, price of that dish
RC = [
    Restaurant("Thai Dishes", "Thai", "334-4433", "Mee Krob", 12.50),
    Restaurant("Nobu", "Japanese", "335-4433", "Natto Temaki", 5.50),
    Restaurant("Nonna", "Italian", "355-4433", "Stracotto", 25.50),
    Restaurant("Jitlada", "Thai", "324-4433", "Paht Woon Sen", 15.50),
    Restaurant("Nola", "New Orleans", "336-4433", "Jambalaya", 5.50),
    Restaurant("Noma", "Modern Danish", "337-4433", "Birch Sap", 35.50),
    Restaurant("Addis Ababa", "Ethiopian", "337-4453", "Yesiga Tibs", 10.50) ]
print('RC[2].name')
print(RC[2].name)
print(' ')
print('RC[0].cuisine == RC[3].cuisine')
print(RC[0].cuisine == RC[3].cuisine)
print(' ')
print('RC[-1].price')
print(RC[-1].price)
print(' ')
print('RC.sort()')
RC.sort()
print(RC[0])
print(RC[1])
print(RC[2])
print(RC[3])
print(RC[4])
print(RC[5])
print(RC[6])
print(' ')
print('RC.reverse()')
RC.reverse()
print(RC[0])
print(RC[1])
print(RC[2])
print(RC[3])
print(RC[4])
print(RC[5])
print(RC[6])
print(' ')
RC.sort()
rcc = [RC[0], RC[1]]
rcc.extend(RC[-2])
rcc.extend(RC[-1])
print(rcc)
print('\n')

print('Part (i)')
import turtle
s26 = turtle.Screen()
t26 = turtle.Turtle()
t26.forward(100)
t26.left(90)
t26.forward(100)
t26.left(90)
t26.forward(100)
t26.left(90)
t26.forward(100)
t26.left(90)
s26.exitonclick()

s27 = turtle.Screen()
t27 = turtle.Turtle()
t27.right(45)
t27.forward(100)
t27.right(90)
t27.forward(100)
t27.right(90)
t27.forward(100)
t27.right(90)
t27.forward(100)
t27.right(90)
t27.left(45)
s27.exitonclick()

sides = int(input('How many sides do you want(Must be bigger than 3): '))
angles = int(((sides - 2) * 180) / sides)
angles = 180 - angles
s28 = turtle.Screen()
t28 = turtle.Turtle()
while sides > 0:
    t28.forward(100)
    t28.left(angles)
    sides = sides - 1
s28.exitonclick()

s30 = turtle.Screen()
t30 = turtle.Turtle()
t30.circle(125)
t30.penup()
t30.left(90)
t30.forward(25)
t30.right(90)
t30.pendown()
t30.circle(100)
t30.penup()
t30.left(90)
t30.forward(25)
t30.right(90)
t30.pendown()
t30.circle(75)
t30.penup()
t30.left(90)
t30.forward(25)
t30.right(90)
t30.pendown()
t30.circle(50)
t30.penup()
t30.right(90)
t30.forward(75)
t30.left(90)
t30.pendown()
s30.exitonclick()

s32 = turtle.Screen()
t32 = turtle.Turtle()
t32.penup()
t32.right(90)
t32.forward(109)
t32.left(90)
t32.pendown()
t32.circle(109)
t32.penup()
t32.left(90)
t32.forward(109)
t32.right(90)
t32.forward(200)
t32.pendown()
t32.circle(1)
s32.exitonclick()

print('\n')
print('Part (j)')
sj = turtle.Screen()
tj = turtle.Turtle()
##tj.penup()
##tj.right(90)
##tj.forward(150)
##tj.left(90)
##tj.pendown()
##tj.circle(150)
##tj.penup()
##tj.left(90)
##tj.forward(150)
##tj.right(90)
##tj.pendown()
tj.dot(300, "light blue")
tj.dot(150, "black")
tj.penup()
tj.left(180)
tj.forward(270)
tj.left(120)
tj.pendown()
tj.circle(320,120)
tj.left(60)
tj.circle(320,120)
sj.exitonclick()
